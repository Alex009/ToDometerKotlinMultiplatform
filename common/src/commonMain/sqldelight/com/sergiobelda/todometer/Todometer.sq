CREATE TABLE ProjectEntity (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    name TEXT NOT NULL,
    description TEXT NOT NULL
);

CREATE TABLE TagEntity (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    color TEXT NOT NULL,
    name TEXT NOT NULL
);

CREATE TABLE TaskEntity (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    title TEXT NOT NULL,
    description TEXT,
    state TEXT NOT NULL,
    project_id INTEGER NOT NULL,
    tag_id INTEGER NOT NULL,
    FOREIGN KEY(project_id) REFERENCES ProjectEntity(id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(tag_id) REFERENCES TagEntity(id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE VIEW TaskTagView AS
    SELECT TaskEntity.*, TagEntity.color AS tag_color, TagEntity.name AS tag_name
    FROM TaskEntity LEFT JOIN TagEntity ON TaskEntity.tag_id = TagEntity.id
    WHERE TagEntity.name IS NOT NULL AND TagEntity.color IS NOT NULL
    ORDER BY TaskEntity.id;

-- CREATE VIEW TaskProjectView AS
--     SELECT DbTask.*, DbProject.name AS project_name
--     FROM DbTask LEFT JOIN DbProject ON DbTask.project_id = DbProject.id
--     ORDER BY project_id;

INSERT INTO ProjectEntity VALUES (1, "My tasks", "Some description");
INSERT INTO TagEntity VALUES (1, "RED", "Other");
INSERT INTO TaskEntity VALUES (1, "Task one", "Task description", "DOING", 1, 1);

selectTask:
SELECT *
FROM TaskTagView
WHERE id = ?;

selectTasksByProjectId:
SELECT *
FROM TaskTagView
WHERE project_id = ? ORDER BY state ASC;

selectAllTasks:
SELECT *
FROM TaskTagView;

insertTask:
INSERT INTO TaskEntity
(title, description, state, project_id, tag_id)
VALUES (?, ?, ?, ?, ?);

updateTask:
UPDATE TaskEntity
SET
    title = ?,
    description = ?,
    tag_id = ?
WHERE id = ?;

updateTaskState:
UPDATE TaskEntity
SET
    state = ?
WHERE id = ?;

deleteTask:
DELETE FROM TaskEntity
WHERE id = ?;

selectProject:
SELECT *
FROM ProjectEntity
WHERE id = ?;

selectAllProjects:
SELECT *
FROM ProjectEntity;

insertProject:
INSERT INTO ProjectEntity
(name, description)
VALUES (?, ?);
