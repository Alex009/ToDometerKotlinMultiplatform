CREATE TABLE ProjectEntity (
    id TEXT PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    sync INTEGER AS Boolean NOT NULL DEFAULT 0
);

CREATE TABLE TaskEntity (
    id TEXT PRIMARY KEY NOT NULL,
    title TEXT NOT NULL,
    description TEXT,
    state TEXT NOT NULL,
    project_id TEXT NOT NULL,
    tag TEXT,
    sync INTEGER AS Boolean NOT NULL DEFAULT 0,
    FOREIGN KEY(project_id) REFERENCES ProjectEntity(id) ON UPDATE CASCADE ON DELETE CASCADE
);

-- CREATE VIEW TaskProjectView AS
--     SELECT DbTask.*, DbProject.name AS project_name
--     FROM DbTask LEFT JOIN DbProject ON DbTask.project_id = DbProject.id
--     ORDER BY project_id;

-------------------- Task

selectTask:
SELECT *
FROM TaskEntity
WHERE id = ?;

selectTasksByProjectId:
SELECT *
FROM TaskEntity
WHERE project_id = ? ORDER BY state ASC;

selectAllTasks:
SELECT *
FROM TaskEntity;

insertOrReplaceTask:
INSERT OR REPLACE INTO TaskEntity
(id, title, description, state, project_id, tag, sync)
VALUES (?, ?, ?, ?, ?, ?, ?);

updateTask:
UPDATE TaskEntity
SET
    title = ?,
    description = ?,
    tag = ?
WHERE id = ?;

updateTaskSync:
UPDATE TaskEntity
SET
    sync = ?
WHERE id = ?;

updateTaskState:
UPDATE TaskEntity
SET
    state = ?
WHERE id = ?;

deleteTask:
DELETE FROM TaskEntity
WHERE id = ?;

-------------------- Project

selectProject:
SELECT *
FROM ProjectEntity
WHERE id = ?;

selectAllProjects:
SELECT *
FROM ProjectEntity;

insertProject:
INSERT INTO ProjectEntity
(id, name, description, sync)
VALUES (?, ?, ?, ?);

insertOrReplaceProject:
INSERT OR REPLACE INTO ProjectEntity
(id, name, description, sync)
VALUES (?,?, ?, ?);

updateProject:
UPDATE ProjectEntity
SET
    name = ?,
    description = ?,
    sync = ?
WHERE id = ?;

deleteProject:
DELETE FROM ProjectEntity
WHERE id = ?;
